interface ParsedURL {
    url: URL;
    hasProtocol: boolean;
    isRelative: boolean;
}
declare type InputURL = string | ParsedURL;
declare type SearchParams = {
    [key: string]: any;
};
declare function withoutTrailingSlash(input?: string): string;
declare function withTrailingSlash(input?: string): string;
declare function cleanDoubleSlashes(input?: string): string;
declare function hasProtocol(inputStr: string): boolean;
declare function parseURL(input?: InputURL): ParsedURL;
declare function joinPath(...path: string[]): string;
declare function normalizeURL(input: InputURL, stripBase?: boolean): string;
declare function withParams(input: InputURL, params: SearchParams): string;
declare function getParams(input: InputURL): SearchParams;
declare function joinURL(input0: string, ...input: string[]): string;

export { InputURL, ParsedURL, SearchParams, cleanDoubleSlashes, getParams, hasProtocol, joinPath, joinURL, normalizeURL, parseURL, withParams, withTrailingSlash, withoutTrailingSlash };
